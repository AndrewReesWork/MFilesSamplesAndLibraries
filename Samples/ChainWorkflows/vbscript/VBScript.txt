Option Explicit

' These are the element aliases we will use.
Const strWorkflowTwoAlias = "MFiles.Workflows.Workflow2"
Const strWorkflowTwoInitialStateAlias = "MFiles.WorkflowStates.Workflow2.Initial"

' Convert the aliases to IDs in the current vault.
Dim intWorkflowTwoId
intWorkflowTwoId = Vault.WorkflowOperations.GetWorkflowIDByAlias(strWorkflowTwoAlias)
Dim intWorkflowTwoInitialStateId
intWorkflowTwoInitialStateId = Vault.WorkflowOperations.GetWorkflowStateIDByAlias(strWorkflowTwoInitialStateAlias)

' Get the workflow property value (hard-coded as always 38).
' Note: in this context we WILL have a workflow value, but most code
' should be written defensively to assume we do not.
Dim objWorkflowPropertyValue
Set objWorkflowPropertyValue = PropertyValues.SearchForProperty(38)

' Get the workflow state property value (hard-coded as always 39).
' Note: in this context we WILL have a workflow state value, but most code
' should be written defensively to assume we do not.
Dim objWorkflowStatePropertyValue
Set objWorkflowStatePropertyValue = PropertyValues.SearchForProperty(39)

' Set the property values.
objWorkflowPropertyValue.Value.SetValue MFDataTypeLookup, intWorkflowTwoId
objWorkflowStatePropertyValue.Value.SetValue MFDataTypeLookup, intWorkflowTwoInitialStateId

' Set up our collection of property values to save.
Dim objPropertyValuesToSave
Set objPropertyValuesToSave = CreateObject("MFilesAPI.PropertyValues")
objPropertyValuesToSave.Add 0, objWorkflowPropertyValue
objPropertyValuesToSave.Add 0, objWorkflowStatePropertyValue

' Save the changes.
Vault.ObjectPropertyOperations.SetProperties objVer, objPropertyValuesToSave

' Ensure the last modified is correct.
Dim objLastModifiedBy: Set objLastModifiedBy = CreateObject("MFilesAPI.TypedValue")
objLastModifiedBy.SetValue MFDataTypeLookup, CurrentUserId
Vault.ObjectPropertyOperations.SetLastModificationInfoAdmin ObjVer, true, objLastModifiedBy, false, Nothing