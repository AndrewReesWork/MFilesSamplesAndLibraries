<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Class Group (MFIdentifier) Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a MFIdentifier for the given class group.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFClassGroupIdentifier</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>Alias</ID>
          <ToolTip>Replace with the alias of the class group.</ToolTip>
          <Default>MyClassGroupAlias</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>PropertyName</ID>
          <ToolTip>The name of the property in C#.</ToolTip>
          <Default>MyClassGroup</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Required</ID>
          <ToolTip>Whether to log an exception to the Windows Event Log if the alias cannot be resolved.</ToolTip>
          <Default>true</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="type decl" Delimiter="$"><![CDATA[
/// <summary>
/// A <see cref="MFIdentifier"/> for the class group
/// with alias "$Alias$".
/// </summary>
/// <remarks>If this alias cannot be resolved then the ID will be -1.</remarks>
[MFClassGroup(Required = $Required$)]
public MFIdentifier $PropertyName$ { get; set; }
	= "$Alias$";$end$
				]]></Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Class (MFIdentifier) Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a MFIdentifier for the given class.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFClassIdentifier</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>Alias</ID>
          <ToolTip>Replace with the alias of the class.</ToolTip>
          <Default>MyClassAlias</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>PropertyName</ID>
          <ToolTip>The name of the property in C#.</ToolTip>
          <Default>MyClass</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Required</ID>
          <ToolTip>Whether to log an exception to the Windows Event Log if the alias cannot be resolved.</ToolTip>
          <Default>true</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="type decl" Delimiter="$"><![CDATA[
/// <summary>
/// A <see cref="MFIdentifier"/> for the class
/// with alias "$Alias$".
/// </summary>
/// <remarks>If this alias cannot be resolved then the ID will be -1.</remarks>
[MFClass(Required = $Required$)]
public MFIdentifier $PropertyName$ { get; set; }
	= "$Alias$";$end$
				]]></Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Object Type (MFIdentifier) Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a MFIdentifier for the given object type.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFObjectTypeIdentifier</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>Alias</ID>
          <ToolTip>Replace with the alias of the object type.</ToolTip>
          <Default>MyObjectTypeAlias</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>PropertyName</ID>
          <ToolTip>The name of the property in C#.</ToolTip>
          <Default>MyObjectType</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Required</ID>
          <ToolTip>Whether to log an exception to the Windows Event Log if the alias cannot be resolved.</ToolTip>
          <Default>true</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="type decl" Delimiter="$"><![CDATA[
/// <summary>
/// A <see cref="MFIdentifier"/> for the object type
/// with alias "$Alias$".
/// </summary>
/// <remarks>If this alias cannot be resolved then the ID will be -1.</remarks>
[MFObjType(Required = $Required$)]
public MFIdentifier $PropertyName$ { get; set; }
	= "$Alias$";$end$
				]]></Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Value List (MFIdentifier) Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a MFIdentifier for the given value list.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFValueListIdentifier</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>Alias</ID>
          <ToolTip>Replace with the alias of the value list.</ToolTip>
          <Default>MyValueListAlias</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>PropertyName</ID>
          <ToolTip>The name of the property in C#.</ToolTip>
          <Default>MyValueList</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Required</ID>
          <ToolTip>Whether to log an exception to the Windows Event Log if the alias cannot be resolved.</ToolTip>
          <Default>true</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="type decl" Delimiter="$"><![CDATA[
/// <summary>
/// A <see cref="MFIdentifier"/> for the value list
/// with alias "$Alias$".
/// </summary>
/// <remarks>If this alias cannot be resolved then the ID will be -1.</remarks>
[MFValueList(Required = $Required$)]
public MFIdentifier $PropertyName$ { get; set; }
	= "$Alias$";$end$
				]]></Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Value List Item (MFIdentifier) Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a MFIdentifier for the given value list item.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFValueListItemIdentifier</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>ValueListAlias</ID>
          <ToolTip>Replace with the alias of the value list.</ToolTip>
          <Default>MyValueListAlias</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>ValueListItemGuid</ID>
          <ToolTip>Replace with the guid of the value list item (in brace format).</ToolTip>
          <Default>MyValueListItemGuid</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>PropertyName</ID>
          <ToolTip>The name of the property in C#.</ToolTip>
          <Default>MyValueListItem</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Required</ID>
          <ToolTip>Whether to log an exception to the Windows Event Log if the guid cannot be found.</ToolTip>
          <Default>true</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="type decl" Delimiter="$"><![CDATA[
/// <summary>
/// A <see cref="MFIdentifier"/> for the value list item
/// with guid "$ValueListItemGuid$" inside the value list
/// with alias "$ValueListAlias$".
/// </summary>
/// <remarks>If this alias/guid cannot be resolved then the ID will be -1.</remarks>
[MFValueListItem(Required = $Required$, ValueList = "$ValueListAlias$")]
public MFIdentifier $PropertyName$ { get; set; }
	= "$ValueListItemGuid$";$end$
				]]></Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Named Access Control List (MFIdentifier) Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a MFIdentifier for the given named access control list.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFNamedAccessControlListIdentifier</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>Alias</ID>
          <ToolTip>Replace with the alias of the named access control list.</ToolTip>
          <Default>MyNamedAccessControlListAlias</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>PropertyName</ID>
          <ToolTip>The name of the property in C#.</ToolTip>
          <Default>MyAccessControlList</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Required</ID>
          <ToolTip>Whether to log an exception to the Windows Event Log if the alias cannot be resolved.</ToolTip>
          <Default>true</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="type decl" Delimiter="$"><![CDATA[
/// <summary>
/// A <see cref="MFIdentifier"/> for the access control list
/// with alias "$Alias$".
/// </summary>
/// <remarks>If this alias cannot be resolved then the ID will be -1.</remarks>
[MFNamedACL(Required = $Required$)]
public MFIdentifier $PropertyName$ { get; set; }
	= "$Alias$";$end$
				]]></Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>User Group (MFIdentifier) Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a MFIdentifier for the given user group.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFUserGroupIdentifier</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>Alias</ID>
          <ToolTip>Replace with the alias of the user group.</ToolTip>
          <Default>MyUserGroupAlias</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>PropertyName</ID>
          <ToolTip>The name of the property in C#.</ToolTip>
          <Default>MyUserGroup</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Required</ID>
          <ToolTip>Whether to log an exception to the Windows Event Log if the alias cannot be resolved.</ToolTip>
          <Default>true</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="type decl" Delimiter="$"><![CDATA[
/// <summary>
/// A <see cref="MFIdentifier"/> for the user group
/// with alias "$Alias$".
/// </summary>
/// <remarks>If this alias cannot be resolved then the ID will be -1.</remarks>
[MFUserGroup(Required = $Required$)]
public MFIdentifier $PropertyName$ { get; set; }
	= "$Alias$";$end$
				]]></Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Property Definition (MFIdentifier) Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a MFIdentifier for the given property definition.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFPropertyDefinitionIdentifier</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>Alias</ID>
          <ToolTip>Replace with the alias of the property definition.</ToolTip>
          <Default>MyPropertyDefinitionAlias</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>PropertyName</ID>
          <ToolTip>The name of the property in C#.</ToolTip>
          <Default>MyPropertyDef</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Required</ID>
          <ToolTip>Whether to log an exception to the Windows Event Log if the alias cannot be resolved.</ToolTip>
          <Default>true</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="type decl" Delimiter="$"><![CDATA[
/// <summary>
/// A <see cref="MFIdentifier"/> for the property definition
/// with alias "$Alias$".
/// </summary>
/// <remarks>If this alias cannot be resolved then the ID will be -1.</remarks>
[MFPropertyDef(Required = $Required$)]
public MFIdentifier $PropertyName$ { get; set; }
	= "$Alias$";$end$
				]]></Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Workflow (MFIdentifier) Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a MFIdentifier for the given workflow.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFWorkflowIdentifier</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>Alias</ID>
          <ToolTip>Replace with the alias of the workflow.</ToolTip>
          <Default>MyWorkflowAlias</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>PropertyName</ID>
          <ToolTip>The name of the property in C#.</ToolTip>
          <Default>MyWorkflow</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Required</ID>
          <ToolTip>Whether to log an exception to the Windows Event Log if the alias cannot be resolved.</ToolTip>
          <Default>true</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="type decl" Delimiter="$"><![CDATA[
/// <summary>
/// A <see cref="MFIdentifier"/> for the workflow
/// with alias "$Alias$".
/// </summary>
/// <remarks>If this alias cannot be resolved then the ID will be -1.</remarks>
[MFWorkflow(Required = $Required$)]
public MFIdentifier $PropertyName$ { get; set; }
	= "$Alias$";$end$
				]]></Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Workflow State (MFIdentifier) Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a MFIdentifier for the given workflow state.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFWorkflowStateIdentifier</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>Alias</ID>
          <ToolTip>Replace with the alias of the workflow state.</ToolTip>
          <Default>MyWorkflowStateAlias</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>PropertyName</ID>
          <ToolTip>The name of the property in C#.</ToolTip>
          <Default>MyWorkflowState</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Required</ID>
          <ToolTip>Whether to log an exception to the Windows Event Log if the alias cannot be resolved.</ToolTip>
          <Default>true</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="type decl" Delimiter="$"><![CDATA[
/// <summary>
/// A <see cref="MFIdentifier"/> for the workflow state
/// with alias "$Alias$".
/// </summary>
/// <remarks>If this alias cannot be resolved then the ID will be -1.</remarks>
[MFState(Required = $Required$)]
public MFIdentifier $PropertyName$ { get; set; }
	= "$Alias$";$end$
				]]></Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Workflow State Transition (MFIdentifier) Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a MFIdentifier for the given workflow state transition.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFWorkflowStateTransitionIdentifier</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>Alias</ID>
          <ToolTip>Replace with the alias of the workflow state transition.</ToolTip>
          <Default>MyWorkflowStateTransitionAlias</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>PropertyName</ID>
          <ToolTip>The name of the property in C#.</ToolTip>
          <Default>MyWorkflowStateTransition</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Required</ID>
          <ToolTip>Whether to log an exception to the Windows Event Log if the alias cannot be resolved.</ToolTip>
          <Default>true</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="type decl" Delimiter="$"><![CDATA[
/// <summary>
/// A <see cref="MFIdentifier"/> for the workflow state transition
/// with alias "$Alias$".
/// </summary>
/// <remarks>If this alias cannot be resolved then the ID will be -1.</remarks>
[MFStateTransition(Required = $Required$)]
public MFIdentifier $PropertyName$ { get; set; }
	= "$Alias$";$end$
				]]></Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>View (MFIdentifier) Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a MFIdentifier for the given view.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFViewIdentifier</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>ViewId</ID>
          <ToolTip>Replace with the Id of the view.</ToolTip>
          <Default>0</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>PropertyName</ID>
          <ToolTip>The name of the property in C#.</ToolTip>
          <Default>MyView</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Required</ID>
          <ToolTip>Whether to log an exception to the Windows Event Log if the alias cannot be resolved.</ToolTip>
          <Default>true</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="type decl" Delimiter="$"><![CDATA[
/// <summary>
/// A <see cref="MFIdentifier"/> for the view
/// with Id $ViewId$.
/// </summary>
[MFView(Required = $Required$)]
public MFIdentifier $PropertyName$ { get; set; }
	= $ViewId$;$end$
				]]></Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Configuration object (MFConfiguration) Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a property for a configuration object, marked with the MFConfiguration attribute.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFConfiguration</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>Namespace</ID>
          <ToolTip>Replace with the namespace to put the configuration into.</ToolTip>
          <Default>MyNamespace</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Key</ID>
          <ToolTip>Replace with the key to put the configuration into.</ToolTip>
          <Default>config</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>PropertyName</ID>
          <ToolTip>The name of the property in C#.</ToolTip>
          <Default>config</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>ConfigurationClassName</ID>
          <ToolTip>The name of the configuration class to use.</ToolTip>
          <Default>Configuration</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="type decl" Delimiter="$"><![CDATA[
/// <summary>
/// Application configuration stored in Name-Value-Storage
/// of type <see cref="MFilesAPI.MFNamedValueType.MFConfigurationValue"/>,
/// and namespace "$Namespace$" with key "$Key$".
/// </summary>
[MFConfiguration("$Namespace$", "$Key$")]
private $ConfigurationClassName$ $PropertyName$ { get; set; }
	= new $ConfigurationClassName$();$end$
				]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>