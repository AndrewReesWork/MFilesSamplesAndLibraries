<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>State Action Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a VAF handler for a state action.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFStateAction</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>WorkflowStateAlias</ID>
          <ToolTip>Replace with the workflow state alias.</ToolTip>
          <Default>MyWorkflowStateAlias</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>MethodName</ID>
          <ToolTip>The name of the method in C#.</ToolTip>
          <Default>MyWorkflowStateHandler</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="method decl" Delimiter="$"><![CDATA[
[StateAction("$WorkflowStateAlias$")]
public void $MethodName$(StateEnvironment env)
{
	throw new System.NotImplementedException();
}
				]]></Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>State Pre-Condition Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a VAF handler for a state pre-condition.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFPreCondition</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>WorkflowStateAlias</ID>
          <ToolTip>Replace with the workflow state alias.</ToolTip>
          <Default>MyWorkflowStateAlias</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>MethodName</ID>
          <ToolTip>The name of the method in C#.</ToolTip>
          <Default>MyWorkflowPreConditionHandler</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="method decl" Delimiter="$"><![CDATA[
[StatePreConditions("$WorkflowStateAlias$")]
public bool $MethodName$(StateEnvironment env, out string message)
{
	throw new System.NotImplementedException();
}
				]]></Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>State Post-Condition Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a VAF handler for a state post-condition.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFPostCondition</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>WorkflowStateAlias</ID>
          <ToolTip>Replace with the workflow state alias.</ToolTip>
          <Default>MyWorkflowStateAlias</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>MethodName</ID>
          <ToolTip>The name of the method in C#.</ToolTip>
          <Default>MyWorkflowStatePostConditionHandler</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="method decl" Delimiter="$"><![CDATA[
[StatePostConditions("$WorkflowStateAlias$")]
public bool $MethodName$(StateEnvironment env, out string message)
{
	throw new System.NotImplementedException();
}
				]]></Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Automatic State Transition Trigger Code Snippet</Title>
      <Author>M-Files Corporation</Author>
      <Description>Adds a VAF handler for an automatic state transition trigger.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>MFAutomaticStateTransitionTrigger</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>Interop.MFilesAPI.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>MFilesAPI</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="true">
          <ID>WorkflowStateAlias</ID>
          <ToolTip>Replace with the workflow state alias.</ToolTip>
          <Default>MyWorkflowStateAlias</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>MethodName</ID>
          <ToolTip>The name of the method in C#.</ToolTip>
          <Default>MyWorkflowStateAutomaticStateTransitionTrigger</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="method decl" Delimiter="$"><![CDATA[
[AutomaticStateTransitionTrigger("$WorkflowStateAlias$")]
public bool $MethodName$(StateEnvironment env, out int nextState)
{
	throw new System.NotImplementedException();
}
				]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>